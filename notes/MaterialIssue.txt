CURRENT IDEAS:
    *Create pipelines on the fly when ever a new kind of pipeline is needed?
        -> some way to identify suitable pipeline for a material quickly
            -> pipelines aren't tied to Material assets themselves?
                -> Where do the materials live? When are they destroyed? Destroyed by who?
                    -> getOrCreatePipeline(Material*) kind of thing?

LOOK AT: https://docs.vulkan.org/samples/latest/samples/performance/descriptor_management/README.html

LOOK AT (especially shaders): https://vkguide.dev/docs/new_chapter_4/materials/
    -> some fat scene data descriptor set, containing also view and proj matrices



*Some renderes use Material assets, some not

*Material is considered essentially "the shader"
    -> Shader requires a few more inputs in addition to the material tho
        -> but is it really an issue?

----

Material:
    *Description how a surface should look like, EXCLUDING everything else!
        -> work that in mind, it's just that simple

Pipeline:
    *The whole shit how stuff gets drawn... -> atm see google drive notes
