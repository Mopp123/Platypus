Maybe take a look how Godot does it

What does rendering require (secondary cmd buf level, where actually calling render commands)
    *Mesh data
    *Component data
    *Misc. data
        -additional vertex buffers (for example: instancing)
        -additional uniform buffers + descriptors (for example: skeletal animation)

Same as above but lower level:
    *pipeline
    *vertex buffers
    *index buffers
    *descriptor sets
    *push constants

    ...its that simple
        -> BUT how to render multiple instances?
        *"dumb rendering"
        *instanced rendering
        BUT How to figure out which one to use?
            -> Mesh type? Renderable type?
        BUT How to do batching?
        NOTE: Also current instanced rendering is kind of fucked, since "living in the worst case scenario all the time"
            -> Should transforms buffer really be the same for everythin? Could it be specified somewhere else per batch, like Mesh asset?
            -> Test StaticRenderer's performace!

        *Descriptor sets needs to live somewhere (for example: joint uniform buffer)
            -> Material specific stuff lives inside the Material asset
            -> Animation specific lives inside the Animation asset
                *The DescriptorSetLayout could live statically somewhere around there:D

            BUT how does something like "foliage rendering" work with wind, etc?
                -> Separate foliage material


Issue:
*Each renderer works so differently
    -> theres no reason to try forcing them work the same way?
